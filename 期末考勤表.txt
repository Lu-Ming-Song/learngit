#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define EOF -1
#define MAX 30
#define max 6
typedef struct student
{
    int rank;
    float aver;//平均分
    float sum;//总成绩
    long int number;//学号
    char name[15];
    float grade[max];//各科成绩
}S;
S student[MAX];
int file(int m)
{
    FILE *fp;
    char filename[30];
    int i=0,j;
    printf("请输入文件名及路径：");
    getchar();
    gets(filename);
    if((fp = fopen(filename,"r")) == NULL)
    {
        printf("Open the file failure\n");
        exit(0);
    }
    while(fscanf(fp,"%s%ld",student[i].name,&student[i].number) != EOF)
    {
        for(j=0;j<m;j++)
        {
             fscanf(fp,"%f",&student[i].grade[j]);
        }
        fprintf(fp,"\n");
       i++;
    }
    fclose(fp);
    printf("读取成功，读取%d位学生信息\n",i);
    return i;
}
void course(int n,int m)
{
    int i,k;
    float a[max]={0},aver[max];
    for(k=0;k<m;k++)
    {
        for(i=0;i<n;i++)
     {
         a[k] = a[k] + student[i].grade[k];
     }
      aver[k] = a[k] / n;
    }
    for(k=0;k<m;k++)
    {
        printf("第%d门课程的总分为：%0.1f平均分为：%0.1f\n",k+1,a[k],aver[k]);
    }
}
void everys(int n,int m)
{
    int k,i;
    for(i=0;i<n;i++)
    {
        for(k=0;k<m;k++)
        {
            student[i].sum = student[i].sum + student[i].grade[k];
        }
        student[i].aver = (float)student[i].sum / n;
    }
    for(i=0;i<n;i++)
    {
        printf("第%d个人的总分为：%0.1f 平均分为：%0.1f\n",i+1,student[i].sum,student[i].aver);
    }
}
void total_score(int n,int m)
{
    S a;
    int i,k;
    for(k=0;k<n-1;k++)
    {
    for(i=0;i<n-1;i++)
    {
        if(student[i].sum < student[i+1].sum)
        {
            a = student[i];
            student[i] = student[i+1];
            student[i+1] = a;
        }
    }
    }
    for(i=0;i<n;i++)
    {
        printf("第%d名: %0.1f  %s\n",i+1,student[i].sum,student[i].name);
        student[i].rank = i+1;
    }
}
void order_number(int n,int m)
{
    S a;
    int i,k;
    for(k=0;k<n-1;k++)
    {
    for(i=0;i<n-1;i++)
    {
        if(student[i].number > student[i+1].number)
        {
            a = student[i];
            student[i] = student[i+1];
            student[i+1] = a;
        }
    }
    }
    for(i=0;i<n;i++)
    {
        printf("%ld\t%s\t%0.1f\n",student[i].number,student[i].name,student[i].sum);
    }
}
void dictionary(int n,int m)
{
    int i,j;
    for(i=0;i<26;i++)
    {
        for(j=0;j<n;j++)
        {
            if(student[j].name[0] == 'a' + i)
            {
                printf("%s\t%0.1f\n",student[j].name,student[j].sum);
            }
        }
    }
}
void search_number(int n,int m)
{
    int num,k=1,i;
    printf("请输入您要查找学生的学号:");
    scanf("%d",&num);
    for(i=0;i<n;i++)
    {
        if(num == student[i].number)
        {
            printf("该学生的排名:%d\t成绩:%0.1f\n",student[i].rank,student[i].sum);
            break;
        }
        k++;
    }
}
void  search_name(int n,int m)
{
    char name[10];
    int len,j,i,k=0;
    printf("请输入您要查询学生的姓名:");
    scanf("%s",name);
    len = strlen(name);
    for(i=0;i<n;i++)
    {
    for(j=0;name[j]!='\0'&&student[i].name[j]!='\0';j++)
    {
        if(student[i].name[j] != name[j])
        {
            break;
        }
    }
    if(j == len)
    {
        printf("%s\t%d\t%0.1f",student[i].name,i+1,student[i].sum);k=1;
    }
    }
    if(k == 0)
    {
        printf("学号输入错误！\n");
    }
}
void analysis_course(int n,int m)
{
    int b[max][5]={0},i,j;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(student[i].grade[j] >= 90)
            {
                b[j][0]++;
            }
            else if(student[i].grade[j] >= 80 && student[i].grade[j] < 90)
            {
                b[j][1]++;
            }
            else if(student[i].grade[j] >= 70 && student[i].grade[j] <80)
            {
                b[j][2]++;
            }
            else if(student[i].grade[j] >= 60 && student[i].grade[j] <70)
            {
                b[j][3]++;
            }
            else
            {
                b[j][4]++;
            }

        }

    }
    for(i=0;i<m;i++)
    {
        for(j=0;j<5;j++)
        {
            if(j == 0)
            {
                printf("第%d科成绩优秀人数为：%d 占比重为:%0.3f\n",i+1,b[i][0],(float)b[i][0]/n);
            }
            else if(j == 1)
            {
                printf("第%d科成绩良好人数为：%d 占比重为:%0.3f\n",i+1,b[i][0],(float)b[i][1]/n);
            }
            else if(j == 2)
            {
                printf("第%d科成绩中等人数为：%d 占比重为:%0.3f\n",i+1,b[i][0],(float)b[i][2]/n);
            }
            else if(j == 3)
            {
                printf("第%d科成绩及格人数为：%d 占比重为:%0.3f\n",i+1,b[i][0],(float)b[i][3]/n);
            }
            else if(j == 4)
            {
                printf("第%d科成绩不及格人数为：%d 占比重为:%0.3f\n",i+1,b[i][0],(float)b[i][4]/n);
            }
        }
    }
}
void List_record(int n,int m)
{
    int i,j;
    printf("学号  \t   姓名   \t");
    for(j=0;j<m;j++)
    {
          printf("第%d科成绩 \t",j+1);
    }
    printf("总成绩\t平均分\n");
    for(i=0;i<n;i++)
    {
        printf("%ld\t%s\t",student[i].number,student[i].name);
        for(j=0;j<m;j++)
        {
            printf("   %0.1f ",student[i].grade[j]);
        }
        printf("%0.1f \t   %0.1f\n",student[i].sum,student[i].aver);
    }
}
void write_file(int n,int m)
{
    FILE *fp;
    char name[30];
    int i,j;
    printf("请输入您想定义的文件名：");
    getchar();
    gets(name);
    fp = fopen(name,"w");
    for(i=0;i<n;i++)
    {
        fprintf(fp,"%d\t%ld\t%s\t%0.1f\t%0.1f\t",student[i].rank,student[i].number,student[i].name,student[i].sum,student[i].aver);
        for(j=0;j<m;j++)
        {
            fprintf(fp,"%0.1f \t",student[i].grade[j]);
        }
        fprintf(fp,"\n");
    }
    fclose(fp);
}
void main()
{
   int n,m,k;
   printf("请输入考试科目数：");
   scanf("%d",&m);
   printf("1.	Read from a file\n2.	Calculate total and average score of every course\n3.	Calculate total and average score of every student\n4.	Sort in descending order by total score of every student\n5.	Sort in ascending order by number\n6.	Sort in dictionary order by name\n7.	Search by number\n8.	Search by name\n9.	Statistic analysis for every course\n10.	List record\n11.	Write to file\n0 . Exit\nPlease input your choice:");
   scanf("%d",&k);
    while(k!=0)
    {
        switch(k)
        {
            case 0:exit(0); break;
            case 1:n = file(m); break;
            case 2:course(n,m); break;
            case 3:everys(n,m); break;
            case 4:total_score(n,m); break;
            case 5:order_number(n,m); break;
            case 6:dictionary(n,m); break;
            case 7:search_number(n,m); break;
            case 8:search_name(n,m); break;
            case 9:analysis_course(m,n); break;
            case 10:List_record(n,m); break;
            case 11:write_file(n,m); break;
        }
              printf("1.	Read from a file\n2.	Calculate total and average score of every course\n3.	Calculate total and average score of every student\n4.	Sort in descending order by total score of every student\n5.	Sort in ascending order by number\n6.	Sort in dictionary order by name\n7.	Search by number\n8.	Search by name\n9.	Statistic analysis for every course\n10.	List record\n11.	Write to file\n0 . Exit\nPlease input your choice:");
              scanf("%d",&k);
    }
}


